#include <iostream>
#include <string>
#include <algorithm>

std::string BINARY(int num) {
    std::string binary = "";

    while (num > 0) {
        binary = std::to_string(num % 2) + binary;
        num /= 2;
    }

    return binary;
}

int main() {
    setlocale(LC_ALL, "ru");

    printf("Введите число: ");
    int num = 0;
    std::cin >> num;
    std::string bin = BINARY(num);
    std::reverse(bin.begin(), bin.end());

    for (int i = 0; i <= (int)sqrt(bin.size()); i++) {
        bin.insert(pow(2, i) - 1, 1, '_');
    }

    printf("Исходная последовательность: %s\n", bin.c_str());
    
    int temp = 0;
    for (int i = 0; i < bin.length(); i++) {
        if (bin[i] == '1') {
            temp ^= i + 1;
        }
    }
    std::string additional_bits = BINARY(temp);
    std::reverse(additional_bits.begin(), additional_bits.end());

    printf("Дополнительные биты: %s\n", additional_bits.c_str());

    for (int j = 0, i = 0; i < bin.length(); i++) {
        if (bin[i] == '_') {
            bin[i] = additional_bits[j++];
        }
    }

    printf("Отправленная последовательность: %s\n", bin.c_str());

    bin[2] = (bin[2] == '1') ? '0' : '1';

    printf("Последовательность с ошибкой: %s\n", bin.c_str());

    temp = 0;
    for (int i = 0; i < bin.length(); i++) {
        if (bin[i] == '1') {
            temp ^= i + 1;
        }
    }

    printf("Позиция ошибочного бита: %d\n", temp-1);

    bin[temp-1] = (bin[temp-1] == '1') ? '0' : '1';

    printf("Исправленная последовательность: %s\n", bin.c_str());
	return 0;
}