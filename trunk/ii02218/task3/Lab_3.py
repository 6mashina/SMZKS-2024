import math

def if_perfect_square(n):
    sqrt_n = int(math.isqrt(n))

    if sqrt_n * sqrt_n == n:
        return sqrt_n
    else:
        return None


if __name__ == "__main__":
    #Мои данные(спасибо P_P) doc - 4, pdf - 4:
    N = 126950797675950874303096925604851105399222699041017772196733549462723607342661210782274795904266336243185243286021793217252014033077747061132255750621710014623309161858309621921048730559780051605895782074804738598488339822530135260363201631576483938149741164655458142155729683330861142337726276708972349891552220378399667486626167723038633616467511230661439976946056099092810425616590416424337756433550640944307059384349454291846980118447544161276995570521814479141157494662581395163154846523155171242347940506510433968793183846538396643855412382565195358343435348930837099777286383013660611770082127619961852206006609
    e = 11560063
    C = 13739282009139548413175150952449276265884965204049652040418162887268488365935509655570622117757586935361700663082466155205869608836678339230401060855472268508081710824242828697039670323819676784563308061895085700381438108270371245525633960461573655932431403476513726017984760595997004713223923583424405198229407011701659307067437084282704860277526547010549163357328225875222634651369885273995844259961706137952994135194317994895110006539232586712925481617560392582602558381243875115094295119516939643623679815046047183914287713417302907845418894495842335422875504249664226981041014320918996935945608867937982223647284 

    #1 - вычисляй n=sqrt(N)
    n = int(math.isqrt(N))
    print(f"n = {n}\n")

    #2 - t1 ^ 2, t1 = n + 1
    t1 = n + 1#метод факторизации

    #4 - мозг считай такие t1 и w1, пока w1 не будет квадратом целого числа
    while True:#и тут
        t1_pow = pow(t1, 2)

        #3 - w1 = (t1 ^ 2) - N
        w1 = t1_pow - N
        w1 = if_perfect_square(w1)
        if w1 == None:
            t1 += 1
        else:
            break

    print(f"Финальные значения t1 и w1:\n t1 = {t1}\n w1 = {w1}\n")

    w1_sqrt = int(math.isqrt(w1))
    print(f"корень w1 = {w1_sqrt}\n")

    #5 - вычисляй p = t1 + w1_sqrt, q = t1 - w1_sqrt
    p = t1 + w1_sqrt
    print(f"p = {p}\n")

    q = t1 - w1_sqrt
    print(f"q = {q}\n")

    #6 - высчитывай Phi(N) = (p - 1)(q - 1)
    phi = (p - 1) * (q - 1)
    print(f"Phi(N) = {phi}\n")

    #7 - высчитывай d как обратный экспоненте e
    d = pow(e, -1, phi)
    print(f"d = {d}\n")

    #8 - дешифруй сообщение D = C ^ d mod N
    D = pow(C, d, N)
    print(f"\"Дешифрованное\" сообщение D = {D}\n")